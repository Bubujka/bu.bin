#!/usr/bin/env ruby

require 'rubygems'
require 'thor'
require 'fileutils'
require 'colored'
require 'pp'
class Bubu < Thor
  no_commands {
    def clear_bubu
      FileUtils.rm_rf('.bubu')
      FileUtils.rm_rf('out')
      FileUtils.rm_rf('in')
    end
    def ensure_file_exists 
      FileUtils.mkdir('.bubu')
      FileUtils.mkdir('in')
      FileUtils.mkdir('out')
      FileUtils.touch('init')
      FileUtils.chmod(0755, 'init')
      FileUtils.touch('.bubu/prev-task')
      FileUtils.touch('Bubufile')
    end
    def run_init_task
      puts `./init`
    end

    def success t
      puts t.green
    end
    def error t
      puts t.red
    end
    def notice t
      puts t.blue
    end
    
    def empty_bubufile?
      File.read('Bubufile').strip == ""
    end

    def bubufile 
      File.read('Bubufile').split("\n")
    end
    def all_done?
      bubufile.last.strip == File.read('.bubu/prev-task').strip
    end
    
    def clear_work_dirs 
      FileUtils.rm_rf("in")
      FileUtils.rm_rf("out")
    end

    def prev_task 
      File.read('.bubu/prev-task').strip
    end

    def get_next_task
      bf = bubufile
      if first_task?
        return bf.first.strip
      else
        return bf[bf.index(prev_task) + 1].strip
      end
    end

    def first_task?
      prev_task == ''
    end

    def run_task task
      notice "./#{task}"
      system("./#{task}")
    end

    def is_good status
      status
    end

    def write_to_status_file task
      File.open('.bubu/prev-task', 'w') do |f|
        f.print task
      end
    end

    def save_results task
      FileUtils.cp_r('out', ".bubu/#{task}")
    end

    def init_work_dirs_for task
      FileUtils.cp_r(".bubu/#{prev_task}", "in")
      FileUtils.mkdir("out")
    end
  }


  desc "init", "Запускает всё с начала"
  def init 
    clear_bubu
    ensure_file_exists
    run_init_task
  end

  desc "clear", "Чистит мусор"
  def clear 
    clear_bubu
  end

  desc "go", "Выполнять команды по порядку"
  def go
    if empty_bubufile?
      notice "Empty Bubufile"
      exit
    end

    if all_done?
      success "Finished"
      exit
    end

    task = get_next_task

    unless first_task?
      clear_work_dirs
      init_work_dirs_for task
    end

    status = run_task task
    if is_good status
      write_to_status_file task
      save_results task
      go
    else
      error "Something going wrong!"
      exit
    end
  end

  desc "touch", "Создать последний файл в списке и дать ему права на исполнение"
  def touch
    system("touch #{bubufile.last}")
    system("chmod +x #{bubufile.last}")
  end

  desc "igo", "Сделать инит и выполнять все команды из Bubufile по порядку"
  def igo
    init
    go
  end
end
Bubu.start
